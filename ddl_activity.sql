DROP DATABASE IF EXISTS LeoCosta_MovieDialogue;
CREATE DATABASE LeoCosta_MovieDialogue;
USE LeoCosta_MovieDialogue;

CREATE TABLE DirectorTable (
  DirectorID INT PRIMARY KEY AUTO_INCREMENT,
  FirstName VARCHAR(30) NOT NULL,
  LastName VARCHAR(30) NOT NULL,
  BirthDate DATE NULL
);

CREATE TABLE RatingTable (
  RatingID INT PRIMARY KEY AUTO_INCREMENT,
  RatingName VARCHAR(5) NOT NULL
);

CREATE TABLE GenreTable (
  GenreID INT PRIMARY KEY AUTO_INCREMENT,
  GenreName VARCHAR(30) NOT NULL
);

CREATE TABLE MovieTable (
  MovieID INT PRIMARY KEY AUTO_INCREMENT,
  Title VARCHAR(100) NOT NULL,
  GenreID INT NOT NULL,
  DirectorID INT NULL,
  RatingID INT NULL,
  ReleaseDate DATE NULL,
  CONSTRAINT fk_movie_genre
    FOREIGN KEY (GenreID)
    REFERENCES GenreTable(GenreID)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,
  CONSTRAINT fk_movie_director
    FOREIGN KEY (DirectorID)
    REFERENCES DirectorTable(DirectorID)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,
  CONSTRAINT fk_movie_rating
    FOREIGN KEY (RatingID)
    REFERENCES RatingTable(RatingID)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);

CREATE TABLE ActorTable (
  ActorID INT PRIMARY KEY AUTO_INCREMENT,
  FirstName VARCHAR(30) NOT NULL,
  LastName VARCHAR(30) NOT NULL,
  BirthDate DATE NULL
);

CREATE TABLE CastMembersTable (
  CastMemberID INT PRIMARY KEY AUTO_INCREMENT,
  ActorID INT NOT NULL,
  MovieID INT NOT NULL,
  Role VARCHAR(50) NOT NULL,
  CONSTRAINT fk_cast_actor
    FOREIGN KEY (ActorID)
    REFERENCES ActorTable(ActorID)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,
  CONSTRAINT fk_cast_movie
    FOREIGN KEY (MovieID)
    REFERENCES MovieTable(MovieID)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);
